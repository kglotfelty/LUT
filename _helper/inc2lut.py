

def inc2lut( inc_file, num_colors=256, outfile=None ):
    """
    
    The cpt-city archive contains various formats, the 
    easies to parse is the .inc format.  (Now also supports
    ds9's .sao format, but we'll stick with this flavor.
    
    The file looks like:
    
    // autogenerated povray color map "berlin_wall"
    // cptutils version 1.31, Fri Oct 31 20:52:24 2008
    #declare berlin_wall =
    color_map {
      [0.00000 color rgbf <0.7843,0.2745,0.2431,0.0000>]
      [0.20000 color rgbf <0.7843,0.2745,0.2431,0.0000>]
      [0.20000 color rgbf <0.6510,0.3686,0.3294,0.0000>]
      [0.40000 color rgbf <0.6510,0.3686,0.3294,0.0000>]
      [0.40000 color rgbf <0.5176,0.4627,0.4118,0.0000>]
      [0.60000 color rgbf <0.5176,0.4627,0.4118,0.0000>]
      [0.60000 color rgbf <0.5255,0.5176,0.5804,0.0000>]
      [0.80000 color rgbf <0.5255,0.5176,0.5804,0.0000>]
      [0.80000 color rgbf <0.5294,0.5765,0.7529,0.0000>]
      [1.00000 color rgbf <0.5294,0.5765,0.7529,0.0000>]
    }    

    """
    import numpy
    
    tab = open( inc_file, "r").readlines()    
    data = filter( lambda x: ' rgb' in x, tab )
    for tt in "[]<>,":
        data = [x.replace(tt, " ").strip() for x in  data ]
    
    data = [x.split() for x in data]
    data = zip(*data)

    idx = [ float(x) for x in data[0] ]
    red = [ float(x) for x in data[3] ]
    grn = [ float(x) for x in data[4] ]
    blu = [ float(x) for x in data[5] ]

    out_idx = np.arange( num_colors )/(num_colors-1.0) 
    out_red = np.interp( out_idx, idx, red )
    out_grn = np.interp( out_idx, idx, grn )
    out_blu = np.interp( out_idx, idx, blu )
    
    if outfile is None:
        if ".inc" in inc_file:
            outfile = inc_file.replace(".inc", ".lut")
        else:
            raise ValueError("Please supply the output file name")

    out_data = [ "{} {} {}\n".format(*x) for x in zip( out_red, out_grn, out_blu ) ]
    
    open(outfile, "w").writelines( out_data )

    
